<Job title="Export Vacancies to Web" dateformat="ddd dd/mm/yyyy" autoclose="Yes">
  <Library>

    <MakeFormField fieldtype="" caption="" name="" multiple="multiple or blank" class="e.g. required" sql="select value,description">
        <If x1="{sql}" x2="" trim="YES" comparison="!=">
          <WriteJSONObject>
            <WriteJSONField name="fieldType" value="{fieldtype}"></WriteJSONField>
            <WriteJSONField name="caption" value="{caption}"></WriteJSONField>
            <WriteJSONField name="name" value="{name}"></WriteJSONField>
            <WriteJSONField name="multiple" value="{multiple}"></WriteJSONField>
            <WriteJSONField name="class" value="{class}"></WriteJSONField>
            <WriteJSONArray name="options">
              <SQLQuery>
                <SQLSelect>{sql}</SQLSelect>
                <ForEachRow>
                  <WriteJSONRow/>
                </ForEachRow>
              </SQLQuery>
            </WriteJSONArray>
            
          </WriteJSONObject>
        </If>
    </MakeFormField>
    
  </Library>
  
  <IfFileExists filename="{jobdir}vacancyuploader.json">
      <SetVariable name="doUpload" value="1"/>
      <SetVariable name="exportfolder" value="{tempdir}"/>
  </IfFileExists>
  <Else>
      <SetVariable name="doUpload" value="0"/>
      <SetVariable name="exportfolder" sql="select first websitefolder from IQXNetEmailDetails"/>
  </Else>
    
    <ExportFile directory="{exportfolder}" filename="WebVacancies.json">
  
    
<WriteJSONObject> 
  <WriteJSONArray name="searchFields" >
      <SQLQuery>
            <Call fieldtype="select" caption="Job Type" name="V_TempPerm" multiple="" class="required" sql="select 'T' as value,'Temp' as description union select 'P','Perm'">MakeFormField</Call>
            <Call fieldtype="select" caption="Department" name="V_departmentid" multiple="" class="required" sql="select departmentid as value,name as description from department where searchable=1 and publishtoweb=1 order by sortorder">MakeFormField</Call>
        <SQLSelect>select tagid,taglocation,description,tagtype from tag where taglocation like 'V%' and publiconweb=1 and tagtype in ('M','L') order by sortorder</SQLSelect>
        <ForEachRow>
          <If x1="{tagtype}" x2="L" ignorecase="YES">
            <SetVariable name="isMultiple" value="multiple" />
            <SetVariable name="squareBrackets" value="" />
            <SetVariable name="xValue" value="tagchoiceid" />
          </If>
          <Else>
            <SetVariable name="isMultiple" value="" />
            <SetVariable name="squareBrackets" value="" />
            <SetVariable name="xValue" value="(if tagchoiceid='_' then '$NONE$' else tagchoiceid endif)" />
          </Else>
          <Call fieldtype="select" caption="{description}" name="Q_{taglocation}_{tagid}{squareBrackets}" multiple="{isMultiple}" class="" sql="select {xValue} as value, description from tagchoice where charindex('%',tagchoiceid)=0 and tagid='{tagid}' and taglocation='{taglocation}' and subchoice=0 and isnull(donotpublishtoweb,0)=0 order by sortorder">MakeFormField</Call>
        </ForEachRow>
      </SQLQuery>
  </WriteJSONArray>
  
    <SQLQuery>
      <SQLSelect>select tagid,taglocation,description from tag where taglocation like 'V%' and publiconweb=1 and tagtype in ('M','L') order by sortorder</SQLSelect>
      <ForEachRow>
         <SetVariable name="safeCaption" value="{description}" regex="\W" replacement="_" />
         <SetVariable name="VQ_FieldList" value="{VQ_FieldList},getquestanswer('{taglocation}','{tagid}',vacancy.vacancyid) as X_{safeCaption}" />
      </ForEachRow>
    </SQLQuery>
  
  <WriteJSONArray name="jobs" >
    <SQLQuery>
      <SQLSelect><![CDATA[select 
          Vacancy.vacancyID V_vacancyID, 
          (if isnull(Vacancy.Temp,0)=1 then 'T' else 'P' endif) as V_TempPerm,
          (if isnull(Vacancy.Temp,0)=1 then 'Temp' else 'Perm' endif) as T_Job_Type,
          vacancy.departmentID as V_departmentid, department.name as T_Department,
          vacancy.position as T_Position, vacancy.startDate as T_Start_Date, vacancy.refcode as X_Reference, vacancy.othernotes as X_Description,
          agencydetails.name as T_Branch, staff.name as X_Contact_Name, staff.email as X_Contact_Email{VQ_FieldList}
        from vacancy key join staff key join agencydetails,vacancy key join department
        where vacancy.status='C' and trim(isnull(vacancy.position,'')) != '' and trim(isnull(X_Contact_Email,'')) != '' 
          and vacancy.startdate is not null and department.searchable=1 and department.publishtoweb=1
        order by X_Reference ]]>
      </SQLSelect>
      <ForEachRow>
        <WriteJSONRow>

          <SQLQuery name="vactagval">
            <SQLSelect>select tag.taglocation + '_' + tag.tagid as val, tagvalue.tagchoiceid from tagvalue key join tag where tag.taglocation like 'V%' and tagvalue.id=:V_vacancyID and tag.publiconweb=1 and tag.tagtype in ('M','L')</SQLSelect>
            <WriteJSONArray name="questions">
              <ForEachRow>
                <WriteJSONObject>
                  <WriteJSONField name="tagid" value="{val}"></WriteJSONField> 
                  <WriteJSONField name="value" value="{tagchoiceid}"></WriteJSONField> 
                </WriteJSONObject>
              </ForEachRow>
            </WriteJSONArray>
          </SQLQuery>
        </WriteJSONRow>
      </ForEachRow>
    </SQLQuery>
  </WriteJSONArray>
</WriteJSONObject>



  </ExportFile>
  <If x1="{doUpload}" x2="1">
    <RunJob job="{jobdir}vacancyuploader.xml">
      <Writeln>{exportfolder}WebVacancies.json</Writeln>
    </RunJob>
  </If>
</Job>